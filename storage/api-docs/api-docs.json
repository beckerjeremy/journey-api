{
    "openapi": "3.0.0",
    "info": {
        "title": "Journey API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api"
        }
    ],
    "paths": {
        "/activity/{activity}/action": {
            "get": {
                "tags": [
                    "action"
                ],
                "summary": "List Actions",
                "description": "Get a list of all actions from the activity.",
                "operationId": "actionList",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Action"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The activity does not exist."
                    }
                }
            },
            "post": {
                "tags": [
                    "action"
                ],
                "summary": "Create action",
                "description": "Create a new action for the activity.",
                "operationId": "actionCreate",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_type_id",
                        "in": "query",
                        "description": "The reference to the input type.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_required",
                        "in": "query",
                        "description": "If the input is required or not.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the action.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A short description of the action.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The activity does not exist."
                    }
                }
            }
        },
        "/activity/{activity}/action/{id}": {
            "get": {
                "tags": [
                    "action"
                ],
                "summary": "Show action",
                "description": "Get a single action from an activity by id.",
                "operationId": "actionShow",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The activity or action does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "action"
                ],
                "summary": "Delete action",
                "description": "Delete an action of an activity.",
                "operationId": "actionDelete",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The activity or action does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "action"
                ],
                "summary": "Update action",
                "description": "Update an existing action of an activity.",
                "operationId": "actionUpdate",
                "parameters": [
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_type_id",
                        "in": "query",
                        "description": "The reference to the input type.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_required",
                        "in": "query",
                        "description": "If the input is required or not.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the action.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A short description of the action.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The activity or action does not exist."
                    }
                }
            }
        },
        "/activity": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "List activities",
                "description": "Get a list of all activities.",
                "operationId": "activityList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Activity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Create activity",
                "description": "Create a new activity.",
                "operationId": "activityCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the activity.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A short description of the activity.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/activity/{id}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Show activity",
                "description": "Get a single activity by id.",
                "operationId": "activityShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The activity does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "activity"
                ],
                "summary": "Delete activity",
                "description": "Delete an activity.",
                "operationId": "activityDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The activity does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "activity"
                ],
                "summary": "Update activity",
                "description": "Update an existing activity.",
                "operationId": "activityUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the activity.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "A short description of the activity.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The activity does not exist."
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Log in",
                "description": "Log in and get an access token.",
                "operationId": "authLogin",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The chosen password of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful."
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "401": {
                        "description": "The given e-mail and password do not match."
                    }
                }
            }
        },
        "/me": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Me",
                "description": "Get the user of the current token.",
                "operationId": "authMe",
                "responses": {
                    "200": {
                        "description": "Your access token time is refreshed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization token invalid."
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Log out",
                "description": "Log out and make the token invalid.",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Log out successful."
                    },
                    "401": {
                        "description": "Authorization token invalid."
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh",
                "description": "Refresh the time on the access token.",
                "operationId": "authRefresh",
                "responses": {
                    "200": {
                        "description": "Your access token time is refreshed."
                    },
                    "401": {
                        "description": "Authorization token invalid."
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/image": {
            "get": {
                "tags": [
                    "imageInput"
                ],
                "summary": "List images",
                "description": "Get a list of all image inputs.",
                "operationId": "imageInputList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageInput"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "imageInput"
                ],
                "summary": "Create image",
                "description": "Create a new image input.",
                "operationId": "imageInputCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the input.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "The image file.",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/image/{id}": {
            "get": {
                "tags": [
                    "imageInput"
                ],
                "summary": "Show image",
                "description": "Get a single image input by id.",
                "operationId": "imageInputShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageInput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The image input does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "imageInput"
                ],
                "summary": "Delete image",
                "description": "Delete an image input.",
                "operationId": "imageInputDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The image input does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "imageInput"
                ],
                "summary": "Update image",
                "description": "Update an existing image input.",
                "operationId": "imageInputUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "The image file.",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The image input does not exist."
                    }
                }
            }
        },
        "/input": {
            "get": {
                "tags": [
                    "input"
                ],
                "summary": "List inputs",
                "description": "Get a list of all inputs.",
                "operationId": "inputList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Input"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "input"
                ],
                "summary": "Create input",
                "description": "Create a new input.",
                "operationId": "inputCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the input.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "input_type_id",
                        "in": "query",
                        "description": "The id of the specialized object.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_type_type",
                        "in": "query",
                        "description": "The class name of the specialized object.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/input/{id}": {
            "get": {
                "tags": [
                    "input"
                ],
                "summary": "Show input",
                "description": "Get a single input by id.",
                "operationId": "inputShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The input does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "input"
                ],
                "summary": "Delete input",
                "description": "Delete an input.",
                "operationId": "inputDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The input does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "input"
                ],
                "summary": "Update input",
                "description": "Update an existing input.",
                "operationId": "inputUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the input.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "input_type_id",
                        "in": "query",
                        "description": "The id of the specialized object.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_type_type",
                        "in": "query",
                        "description": "The class name of the specialized object.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The input does not exist."
                    }
                }
            }
        },
        "/inputType": {
            "get": {
                "tags": [
                    "inputType"
                ],
                "summary": "List input types",
                "description": "Get a list of all input types.",
                "operationId": "inputTypeList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InputType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inputType/{id}": {
            "get": {
                "tags": [
                    "inputType"
                ],
                "summary": "Show input type",
                "description": "Get a single input type by id.",
                "operationId": "inputTypeShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The input type does not exist."
                    }
                }
            }
        },
        "/journey/{journey}/activity/{activity}/action": {
            "get": {
                "tags": [
                    "journeyAction"
                ],
                "summary": "List actions",
                "description": "Get a list of all actions of a journey activity.",
                "operationId": "journeyActionList",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JourneyAction"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The journey or activity does not exist."
                    }
                }
            },
            "post": {
                "tags": [
                    "journeyAction"
                ],
                "summary": "Create activity",
                "description": "Create a new action for the journey activity.",
                "operationId": "journeyActionCreate",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "query",
                        "description": "The reference to the action the user starts.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time the action was started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The reference to the status of the action.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_id",
                        "in": "query",
                        "description": "The reference to the input attached to the action.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyAction"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The journey or activity does not exist."
                    }
                }
            }
        },
        "/journey/{journey}/activity/{activity}/action/{id}": {
            "get": {
                "tags": [
                    "journeyAction"
                ],
                "summary": "Show action",
                "description": "Get a single action from a journey activity by id.",
                "operationId": "journeyActionShow",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyAction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The journey, activity or action does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "journeyAction"
                ],
                "summary": "Delete action",
                "description": "Delete an action of a journey activity.",
                "operationId": "journeyActionDelete",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The journey, activity or action does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "journeyAction"
                ],
                "summary": "Update action",
                "description": "Update an existing action of a journey activity.",
                "operationId": "journeyActionUpdate",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "action_id",
                        "in": "query",
                        "description": "The reference to the action the user starts.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time the action was started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The reference to the status of the action.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "input_id",
                        "in": "query",
                        "description": "The reference to the input attached to the action.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyAction"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The journey, activity or action does not exist."
                    }
                }
            }
        },
        "/journey/{journey}/activity": {
            "get": {
                "tags": [
                    "journeyActivity"
                ],
                "summary": "List activities",
                "description": "Get a list of all activities of a journey.",
                "operationId": "journeyActivityList",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JourneyActivity"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The journey does not exist."
                    }
                }
            },
            "post": {
                "tags": [
                    "journeyActivity"
                ],
                "summary": "Create activity",
                "description": "Create a new activity for the journey.",
                "operationId": "journeyActivityCreate",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity_id",
                        "in": "query",
                        "description": "The reference to the activity the user starts.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time the activity was started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The reference to the status of the activity.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyActivity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The journey does not exist."
                    }
                }
            }
        },
        "/journey/{journey}/activity/{id}": {
            "get": {
                "tags": [
                    "journeyActivity"
                ],
                "summary": "Show activity",
                "description": "Get a single activity from a journey by id.",
                "operationId": "journeyActivityShow",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyActivity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The journey or activity does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "journeyActivity"
                ],
                "summary": "Delete activity",
                "description": "Delete an activity of a journey.",
                "operationId": "journeyActivityDelete",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The journey or activity does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "journeyActivity"
                ],
                "summary": "Update activity",
                "description": "Update an existing activity of a journey.",
                "operationId": "journeyActivityUpdate",
                "parameters": [
                    {
                        "name": "journey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activity_id",
                        "in": "query",
                        "description": "The reference to the activity the user starts.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time the activity was started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The reference to the status of the activity.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JourneyActivity"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The journey or activity does not exist."
                    }
                }
            }
        },
        "/journey": {
            "get": {
                "tags": [
                    "journey"
                ],
                "summary": "List journeys",
                "description": "Get a list of all journeys.",
                "operationId": "journeyList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Journey"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "journey"
                ],
                "summary": "Create journey",
                "description": "Create a new journey.",
                "operationId": "journeyCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the activity.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time when the journey has been started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The id of the status of the journey.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "The id of the user the journey belongs to.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Journey"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/journey/{id}": {
            "get": {
                "tags": [
                    "journey"
                ],
                "summary": "Show journey",
                "description": "Get a single journey by id.",
                "operationId": "journeyShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Journey"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The journey does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "journey"
                ],
                "summary": "Delete journey",
                "description": "Delete a journey.",
                "operationId": "journeyDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The journey does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "journey"
                ],
                "summary": "Update journey",
                "description": "Update an existing journey.",
                "operationId": "journeyUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the activity.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at",
                        "in": "query",
                        "description": "The date and time when the journey has been started.",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "status_id",
                        "in": "query",
                        "description": "The id of the status of the journey.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "The id of the user the journey belongs to.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Journey"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The journey does not exist."
                    }
                }
            }
        },
        "/status": {
            "get": {
                "tags": [
                    "status"
                ],
                "summary": "List statuses",
                "description": "Get a list of all statuses.",
                "operationId": "statusList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Status"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status/{id}": {
            "get": {
                "tags": [
                    "status"
                ],
                "summary": "Show status",
                "description": "Get a single status by id.",
                "operationId": "statusShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The status does not exist."
                    }
                }
            }
        },
        "/text": {
            "get": {
                "tags": [
                    "textInput"
                ],
                "summary": "List text inputs",
                "description": "Get a list of all text inputs.",
                "operationId": "textInputList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TextInput"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "textInput"
                ],
                "summary": "Create text input",
                "description": "Create a new text input.",
                "operationId": "textInputCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the input.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The text entered by the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/text/{id}": {
            "get": {
                "tags": [
                    "textInput"
                ],
                "summary": "Show text input",
                "description": "Get a single text input by id.",
                "operationId": "textInputShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextInput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The text input does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "textInput"
                ],
                "summary": "Delete text input",
                "description": "Delete a text input.",
                "operationId": "textInputDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The text input does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "textInput"
                ],
                "summary": "Update text input",
                "description": "Update an existing text input.",
                "operationId": "textInputUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "The text entered by the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The text input does not exist."
                    }
                }
            }
        },
        "/token": {
            "post": {
                "tags": [
                    "token"
                ],
                "summary": "Create user with token",
                "description": "Create a new user with token.",
                "operationId": "tokenCreate",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token the user gets.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/token/{token}": {
            "get": {
                "tags": [
                    "token"
                ],
                "summary": "Show user with token",
                "description": "Get a single user by token.",
                "operationId": "tokenShow",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The user does not exist."
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "List users",
                "description": "Get a list of all users.",
                "operationId": "userList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "Create a new user.",
                "operationId": "userCreate",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "The first name of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family_name",
                        "in": "query",
                        "description": "The family name of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address of the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the user to log in.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "The confirmed password of the user to log in.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "The preferred language of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "If the user account is an admin account.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The token of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Show user",
                "description": "Get a single user by id.",
                "operationId": "userShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The user does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "Delete an user.",
                "operationId": "userDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The user does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "description": "Update an existing user.",
                "operationId": "userUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "The first name of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family_name",
                        "in": "query",
                        "description": "The family name of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email address of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the user to log in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "The confirmed password of the user to log in.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "The preferred language of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_admin",
                        "in": "query",
                        "description": "If the user account is an admin account.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The token of the user.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The user does not exist."
                    }
                }
            }
        },
        "/video": {
            "get": {
                "tags": [
                    "videoInput"
                ],
                "summary": "List videos",
                "description": "Get a list of all video inputs.",
                "operationId": "videoInputList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VideoInput"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "videoInput"
                ],
                "summary": "Create video",
                "description": "Create a new video input.",
                "operationId": "videoInputCreate",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the input.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "video",
                        "in": "query",
                        "description": "The video file.",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VideoInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    }
                }
            }
        },
        "/video/{id}": {
            "get": {
                "tags": [
                    "videoInput"
                ],
                "summary": "Show video",
                "description": "Get a single video input by id.",
                "operationId": "videoInputShow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VideoInput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The video input does not exist."
                    }
                }
            },
            "delete": {
                "tags": [
                    "videoInput"
                ],
                "summary": "Delete video",
                "description": "Delete a video input.",
                "operationId": "videoInputDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The video input does not exist."
                    }
                }
            },
            "patch": {
                "tags": [
                    "videoInput"
                ],
                "summary": "Update video",
                "description": "Update an existing video input.",
                "operationId": "videoInputUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "video",
                        "in": "query",
                        "description": "The video file.",
                        "required": true,
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VideoInput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The entered parameters are not valid."
                    },
                    "404": {
                        "description": "The video input does not exist."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Action": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/Activity"
                    },
                    "input_type": {
                        "$ref": "#/components/schemas/InputType"
                    },
                    "input_required": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "name": {
                        "type": "string",
                        "example": "Take Photo"
                    },
                    "description": {
                        "type": "string",
                        "example": "Now the photo will be taken by the selfie box."
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Action"
                }
            },
            "Activity": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Photos"
                    },
                    "description": {
                        "type": "string",
                        "example": "Take two photos in the selfie box."
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Activity"
                }
            },
            "ImageInput": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "file_url": {
                        "type": "string",
                        "example": "http://targeturl.com/uploads/images/name.png"
                    },
                    "type": {
                        "type": "string",
                        "example": "png"
                    },
                    "size": {
                        "type": "integer",
                        "example": "3453979"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ImageInput"
                }
            },
            "Input": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Take Photo"
                    },
                    "data_type_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data_type_type": {
                        "type": "string",
                        "example": "App\\\\Models\\\\ImageInput"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Input"
                }
            },
            "InputType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Image"
                    },
                    "description": {
                        "type": "string",
                        "example": "The user has to submit an image input."
                    },
                    "class_name": {
                        "type": "string",
                        "example": "App\\\\Models\\\\ImageInput"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InputType"
                }
            },
            "Journey": {
                "required": [
                    "name",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Selfie-box Journey"
                    },
                    "started_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Journey"
                }
            },
            "JourneyAction": {
                "required": [
                    "journey_activity",
                    "action",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "journey_activity": {
                        "$ref": "#/components/schemas/JourneyActivity"
                    },
                    "action": {
                        "$ref": "#/components/schemas/Action"
                    },
                    "started_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "input": {
                        "$ref": "#/components/schemas/Input"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "JourneyAction"
                }
            },
            "JourneyActivity": {
                "required": [
                    "journey",
                    "activity",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "journey": {
                        "$ref": "#/components/schemas/Journey"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/Activity"
                    },
                    "started_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "JourneyActivity"
                }
            },
            "Status": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Created"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Status"
                }
            },
            "TextInput": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "text": {
                        "type": "string",
                        "example": "Take Photo"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TextInput"
                }
            },
            "User": {
                "required": [
                    "first_name",
                    "family_name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "Jeremy"
                    },
                    "family_name": {
                        "type": "string",
                        "example": "Becker"
                    },
                    "email": {
                        "type": "string",
                        "example": "jeremy@becker.dev"
                    },
                    "password": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string",
                        "example": "de"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "token": {
                        "type": "string",
                        "example": "d8fah"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "VideoInput": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "file_url": {
                        "type": "string",
                        "example": "http://targeturl.com/uploads/videos/name.png"
                    },
                    "type": {
                        "type": "string",
                        "example": "mp4"
                    },
                    "size": {
                        "type": "integer",
                        "example": "29480381"
                    },
                    "duration": {
                        "type": "integer",
                        "example": "10"
                    },
                    "created_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    },
                    "updated_at": {
                        "type": "date",
                        "example": "2022-05-25 22:15:23"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "VideoInput"
                }
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}